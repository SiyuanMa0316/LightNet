#define DTYPE TL_FLOAT

#define conv(in_name, out_name, in_c, out_c,                            \
             _size, _stride, _padding, _dilation)                       \
    create(| dst=out_name##_kernels |                                   \
           dtype=DTYPE, dims=[out_c, in_c, _size, _size],               \
           ran=[-10, 10], data=[0], from_file=true);                    \
    create(| dst=out_name##_biases | dtype=DTYPE, dims=[out_c],         \
           ran=[-10, 10], data=[0], from_file=true);                    \
    conv2d(src=in_name, weight=out_name##_kernels, bias=out_name##_biases | \
           dst=out_name | group=1, size=[_size, _size],                 \
           stride=[_stride, _stride],                                   \
           padding=[_padding, _padding, _padding, _padding],            \
           autopad="NOTSET",                                            \
           dilation=[_dilation, _dilation])

#define fire(in_name, out_name, in_c, ns1x1, ne1x1, ne3x3)              \
    conv(in_name, out_name##_squeeze1x1, in_c, ns1x1, 1, 1, 0, 1);      \
    relu(src=out_name##_squeeze1x1 | dst=out_name##_squeeze1x1_relu |); \
    conv(out_name##_squeeze1x1_relu, out_name##_expand1x1, ns1x1, ne1x1, \
         1, 1, 0, 1);                                                   \
    relu(src=out_name##_expand1x1 | dst=out_name##_expand1x1_relu |);   \
    conv(out_name##_squeeze1x1_relu, out_name##_expand3x3, ns1x1, ne3x3, \
         3, 1, 1, 1);                                                   \
    relu(src=out_name##_expand3x3 | dst=out_name##_expand3x3_relu |);   \
    concat(src1=out_name##_expand1x1_relu, src2=out_name##_expand3x3_relu \
           | dst=out_name | axis=1)

#define INPUT_H 368
#define INPUT_W 640
#define IMG_H 360
#define IMG_W 640
#define X_SHIFT -20
#define Y_SHIFT -20

#define CONVOUT_H 23
#define CONVOUT_W 40
#define CONVOUT_C 340
#define CLASS_SLICE_C 240
#define CONF_SLICE_C 20
#define BBOX_SLICE_C 80
#define ANCHORS_PER_GRID 20
#define OUTPUT_CLS_SIZE 12
#define OUTPUT_BBOX_SIZE 4
#define ANCHOR_NUM ${eval CONVOUT_H * CONVOUT_W * ANCHORS_PER_GRID}
#define TOP_N_DETECTION 1

create(| dst=input | dtype=DTYPE, dims=[1, 3, INPUT_H, INPUT_W], ran=[0, 255],
       data=[0], from_file=true);
conv(input, conv1, 3, 64, 3, 1, 1, 1);
relu(src=conv1 | dst=conv1_relu |);
maxpool2d(src=conv1_relu | dst=pool1 | size=[3, 3], stride=[2, 2],
          padding=[1, 1, 1, 1], autopad="NOTSET");
maxpool2d(src=pool1 | dst=pool2 | size=[3, 3], stride=[2, 2],
          padding=[1, 1, 1, 1], autopad="NOTSET");
fire(pool2, fire2, 64, 16, 64, 64);
fire(fire2, fire3, 128, 16, 64, 64);
maxpool2d(src=fire3 | dst=pool3 | size=[3, 3], stride=[2, 2],
          padding=[1, 1, 1, 1], autopad="NOTSET");
fire(pool3, fire4, 128, 32, 128, 128);
fire(fire4, fire5, 256, 32, 128, 128);
maxpool2d(src=fire5 | dst=pool5 | size=[3, 3], stride=[2, 2],
          padding=[1, 1, 1, 1], autopad="NOTSET");
fire(pool5, fire6, 256, 48, 192, 192);
fire(fire6, fire7, 384, 48, 192, 192);
fire(fire7, fire8, 384, 64, 256, 256);
fire(fire8, fire9, 512, 64, 256, 256);
slice(src=pool3 | dst=splitTmp1 | axis=3, start=0, len=CONVOUT_W);
slice(src=splitTmp1 | dst=split1 | axis=2, start=0, len=CONVOUT_H);
slice(src=splitTmp1 | dst=split2 | axis=2, start=CONVOUT_H, len=CONVOUT_H);
slice(src=pool3 | dst=splitTmp2 | axis=3, start=CONVOUT_W, len=CONVOUT_W);
slice(src=splitTmp2 | dst=split3 | axis=2, start=0, len=CONVOUT_H);
slice(src=splitTmp2 | dst=split4 | axis=2, start=CONVOUT_H, len=CONVOUT_H);
slice(src=pool3 | dst=splitTmp3 | axis=3, start=${eval CONVOUT_W/2},
      len=CONVOUT_W);
slice(src=splitTmp3 | dst=split5 | axis=2, start=${eval CONVOUT_H/2},
      len=CONVOUT_H);
concat(src1=split1, src2=split2 | dst=concat1 | axis=1);
concat(src1=concat1, src2=split3 | dst=concat2 | axis=1);
concat(src1=concat2, src2=split4 | dst=concat3 | axis=1);
concat(src1=concat3, src2=split5 | dst=concat4 | axis=1);
concat(src1=concat4, src2=fire9 | dst=concat5 | axis=1);
fire(concat5, fire10, 1152, 96, 384, 384);
fire(fire10, fire11, 768, 96, 384, 384);
conv(fire11, conv12, 768, CONVOUT_C, 3, 1, 1, 1);
slice(src=conv12 | dst=slice_conf | axis=1, start=CLASS_SLICE_C,
      len=CONF_SLICE_C);
slice(src=conv12 | dst=slice_bbox | axis=1,
      start=${eval CLASS_SLICE_C + CONF_SLICE_C}, len=BBOX_SLICE_C);
sigmoid(src=slice_conf | dst=sigmoid_conf |);
reshape(src=sigmoid_conf | dst=reshape_conf |
        dims=[1, ANCHORS_PER_GRID, 1, CONVOUT_H, CONVOUT_W]);
reshape(src=slice_bbox | dst=reshape_bbox |
        dims=[1, ANCHORS_PER_GRID, OUTPUT_BBOX_SIZE, CONVOUT_H, CONVOUT_W]);
transpose(src=reshape_conf | dst=transpose_conf | axes=[0, 3, 4, 1, 2]);
transpose(src=reshape_bbox | dst=transpose_bbox | axes=[0, 3, 4, 1, 2]);
create(| dst=anchors | dtype=DTYPE,
       dims=[1, CONVOUT_H, CONVOUT_W, ANCHORS_PER_GRID, 4], ran=[0,100],
       data=[0], from_file=false);
transform_bboxSQD(src_delta=transpose_bbox, src_anchor=anchors | dst=bbox |
                  width=INPUT_W, height=INPUT_H, img_width=IMG_W,
                  img_height=IMG_H, x_shift=X_SHIFT, y_shift=Y_SHIFT);
create(| dst=index | dtype=TL_INT32, dims=[ANCHOR_NUM], ran=[0,10], data=[0], from_file=false);
rearange(src=index | dst=index_rearrange | start=0, step=1, stop=ANCHOR_NUM);
reshape(src=transpose_conf | dst=reshape_conf1d | dims=[ANCHOR_NUM]);
sort1d_by_key(src_key=reshape_conf1d, src_val=index_rearrange |
              dst_key=sort_conf1d, dst_val=sort_index |
              dir=TL_SORT_DIR_DESCENDING);
reshape(src=bbox | dst=bbox1d | dims=[${eval ANCHOR_NUM * 4}]);
pick1d(src=bbox1d, src_index=sort_index | dst=final_bbox |
       len=TOP_N_DETECTION, stride=OUTPUT_BBOX_SIZE);
