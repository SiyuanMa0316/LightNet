#define DTYPE TL_FLOAT

#define conv(in_name, out_name, in_c, out_c,                            \
             _size, _stride, _padding, _dilation)                       \
    create(| dst=out_name##_wts |                                       \
           dtype=DTYPE, dims=[out_c, in_c, _size, _size],               \
           ran=[-10, 10], data=[0], from_file=true);                    \
    create(| dst=out_name##_bias | dtype=DTYPE, dims=[out_c],           \
           ran=[-10, 10], data=[0], from_file=true);                    \
    conv2d(src=in_name, weight=out_name##_wts, bias=out_name##_bias |   \
           dst=out_name | group=1, size=[_size, _size],                 \
           stride=[_stride, _stride],                                   \
           padding=[_padding, _padding, _padding, _padding],            \
           dilation=[_dilation, _dilation])

#define conv_relu(in_name, out_name, in_c, out_c,       \
                  _size, _stride, _padding, _dilation)  \
    conv(in_name, out_name##_conv, in_c, out_c,         \
         _size, _stride, _padding, _dilation);          \
    relu(src=out_name##_conv | dst=out_name |)

#define fire(in_name, out_name, in_c, ns1x1, ne1x1, ne3x3)              \
    conv_relu(in_name, out_name##_sq1x1, in_c, ns1x1, 1, 1, 0, 1);      \
    conv_relu(out_name##_sq1x1, out_name##_ex1x1, ns1x1, ne1x1,         \
              1, 1, 0, 1);                                              \
    conv_relu(out_name##_sq1x1, out_name##_ex3x3, ns1x1, ne3x3,         \
              3, 1, 1, 1);                                              \
    concat(src1=out_name##_ex1x1, src2=out_name##_ex3x3 | dst=out_name | \
           axis=1)

#define INPUT_H 384
#define INPUT_W 1248
#define IMG_H 375
#define IMG_W 1242
#define X_SHIFT -20
#define Y_SHIFT -20

#define CONVOUT_H 24
#define CONVOUT_W 78
#define CONVOUT_C 72
#define CLASS_SLICE_C 27
#define CONF_SLICE_C 9
#define CLASS_PLUS_CONF_SLICE_C 36
#define BBOX_SLICE_C 36
#define ANCHORS_PER_GRID 9
#define OUTPUT_CLS_SIZE 3
#define OUTPUT_BBOX_SIZE 4
#define ANCHOR_NUM 16848
#define ANCHOR_NUMx4 67392
#define TOP_N_DETECTION 64

create(| dst=input | dtype=DTYPE, dims=[1, 3, INPUT_H, INPUT_W], ran=[0, 255],
       data=[0], from_file=true);
conv_relu(input, conv1, 3, 64, 3, 2, 1, 1);
fprint(src=conv1_conv_bias | | msg="conv1_conv_bias", file="debug/conv1_conv_bias.txt");
fprint(src=conv1_conv_wts | | msg="conv1_conv_wts", file="debug/conv1_conv_wts.txt");
fprint(src=conv1_conv | | msg="conv1_conv", file="debug/conv1_conv.txt");
maxpool2d(src=conv1 | dst=pool1 | size=[3, 3], stride=[2, 2],
          padding=[1, 1, 1, 1]);
fprint(src=pool1 | | msg="pool1", file="debug/pool1.txt");
fire(pool1, fire2, 64, 16, 64, 64);
fprint(src=fire2_sq1x1 | | msg="fire2_sq1x1", file="debug/fire2_sq1x1.txt");
fire(fire2, fire3, 128, 16, 64, 64);
maxpool2d(src=fire3 | dst=pool3 | size=[3, 3], stride=[2, 2],
          padding=[1, 1, 1, 1]);
fire(pool3, fire4, 128, 32, 128, 128);
fire(fire4, fire5, 256, 32, 128, 128);
maxpool2d(src=fire5 | dst=pool5 | size=[3, 3], stride=[2, 2],
          padding=[1, 1, 1, 1]);
fire(pool5, fire6, 256, 48, 192, 192);
fire(fire6, fire7, 384, 48, 192, 192);
fire(fire7, fire8, 384, 64, 256, 256);
fire(fire8, fire9, 512, 64, 256, 256);
fire(fire9, fire10, 512, 96, 384, 384);
fire(fire10, fire11, 768, 96, 384, 384);
conv(fire11, conv12, 768, CONVOUT_C, 3, 1, 1, 1);
fprint(src=input | | msg="input", file="debug/input.txt");
fprint(src=conv12 | | msg="convout", file="debug/convout.txt");
slice(src=conv12 | dst=slice_class | axis=1, start=0, len=CLASS_SLICE_C);
slice(src=conv12 | dst=slice_conf | axis=1, start=CLASS_SLICE_C,
      len=CONF_SLICE_C);
slice(src=conv12 | dst=slice_bbox | axis=1, start=CLASS_PLUS_CONF_SLICE_C,
      len=BBOX_SLICE_C);
softmax(src=slice_class | dst=softmax_class | axis=1);
sigmoid(src=slice_conf | dst=sigmoid_conf |);
reshape(src=softmax_class | dst=reshape_class |
        dims=[1, ANCHORS_PER_GRID, OUTPUT_CLS_SIZE, CONVOUT_H, CONVOUT_W]);
reshape(src=sigmoid_conf | dst=reshape_conf |
        dims=[1, ANCHORS_PER_GRID, 1, CONVOUT_H, CONVOUT_W]);
reshape(src=slice_bbox | dst=reshape_bbox |
        dims=[1, ANCHORS_PER_GRID, OUTPUT_BBOX_SIZE, CONVOUT_H, CONVOUT_W]);
transpose(src=reshape_class | dst=transpose_class | axes=[0, 3, 4, 1, 2]);
transpose(src=reshape_conf | dst=transpose_conf | axes=[0, 3, 4, 1, 2]);
transpose(src=reshape_bbox | dst=transpose_bbox | axes=[0, 3, 4, 1, 2]);
maxreduce_arg(src=transpose_class | dst=maxreduce_dst, arg=maxreduce_arg |
              axis=4);
elew(src1=maxreduce_dst, src2=transpose_conf | dst=elew0 | elew_op=TL_MUL);
create(| dst=anchors | dtype=DTYPE,
       dims=[1, CONVOUT_H, CONVOUT_W, ANCHORS_PER_GRID, 4], ran=[0,100],
       data=[0], from_file=true);
transform_bboxSQD(src_delta=transpose_bbox, src_anchor=anchors | dst=bbox |
                  width=INPUT_W, height=INPUT_H, img_width=IMG_W,
                  img_height=IMG_H, x_shift=X_SHIFT, y_shift=Y_SHIFT);
create(| dst=index | dtype=TL_INT32, dims=[ANCHOR_NUM], ran=[0,10], data=[0], from_file=false);
rearange(src=index | dst=index_rearrange | start=0, step=1, stop=ANCHOR_NUM);
reshape(src=transpose_conf | dst=reshape_conf1d | dims=[ANCHOR_NUM]);
sort1d_by_key(src_key=reshape_conf1d, src_val=index_rearrange |
              dst_key=sort_conf1d, dst_val=sort_index |
              dir=TL_SORT_DIR_DESCENDING);
reshape(src=elew0 | dst=elew01d | dims=[ANCHOR_NUM]);
reshape(src=maxreduce_arg | dst=maxreduce_arg1d | dims=[ANCHOR_NUM]);
reshape(src=bbox | dst=bbox1d | dims=[ANCHOR_NUMx4]);
pick1d(src=elew01d, src_index=sort_index | dst=final_prob | len=TOP_N_DETECTION,
       stride=1);
pick1d(src=maxreduce_arg1d, src_index=sort_index | dst=final_class |
       len=TOP_N_DETECTION, stride=1);
pick1d(src=bbox1d, src_index=sort_index | dst=final_bbox |
       len=TOP_N_DETECTION, stride=OUTPUT_BBOX_SIZE);
fprint(src=final_prob | | msg="final_prob", file="debug/final_prob.txt");
fprint(src=final_class | | msg="final_class", file="debug/final_class.txt");
fprint(src=final_bbox | | msg="final_bbox", file="debug/final_bbox.txt");
